---
# Summary
# --------
# Graphs are served at http://grafana.((system_domain))
# Prometheus debug UI at http://prometheus.((system_domain))
#
# Adds a single VM containing:
# - a prometheus server to collect metrics
# - a grafana server to display metrics / graphs
# - metrics exporters for BOSH, CF, and prometheus itself
# - dashboard config files for the above exporters
#
# Required properties (names re-used from bosh-deployment-resource source file):
#
# - target: bosh director URL
# - client: bosh director username
# - client_secret: bosh director password
# - ca_cert: bosh director CA cert
#
# Optional properties:
#
# - prometheus_password: admin password for prometheus and grafana
# - prometheus_client_secret: secret for UAA firehose + admin_read_only client

- type: replace
  path: /instance_groups/-
  value:
    name: prometheus
    instances: 1
    azs: [z1]
    vm_type: m3.medium
    persistent_disk: 10240
    stemcell: default
    networks:
      - name: default
    jobs:
      - name: prometheus
        release: prometheus
        properties:
          prometheus:
            web:
              port: 9191 # allow nginx to serve all traffic
            scrape_configs:
              - job_name: prometheus
                static_configs:
                  - targets:
                    - localhost:9191
              - job_name: bosh
                scrape_interval: 1m
                scrape_timeout: 1m
                static_configs:
                  - targets:
                    - localhost:9190
              - job_name: firehose
                static_configs:
                  - targets:
                    - localhost:9186
              - job_name: cf
                scrape_interval: 2m
                scrape_timeout: 2m
                static_configs:
                  - targets:
                    - localhost:9193

      - name: bosh_exporter
        release: prometheus
        properties:
          bosh_exporter:
            bosh:
              # re-use values from bosh-deployment-resource source file
              url: ((target))
              username: ((client))
              password: ((client_secret))
              ca_cert: ((ca_cert))
            metrics:
              environment: cf
      - name: firehose_exporter
        release: prometheus
        properties:
          firehose_exporter:
            skip_ssl_verify: true
            uaa:
              url: https://uaa.((system_domain))
              client_id: prometheus
              client_secret: ((prometheus_uaa_client_secret))
            doppler:
              url: wss://doppler.((system_domain)):443
            metrics:
              environment: cf
      - name: cf_exporter
        release: prometheus
        properties:
          cf_exporter:
            skip_ssl_verify: true
            cf:
              api_url: https://api.((system_domain))
              client_id: prometheus
              client_secret: ((prometheus_uaa_client_secret))
              deployment_name: cf
            metrics:
              environment: cf

      - name: prometheus_dashboards
        release: prometheus
      - name: bosh_dashboards
        release: prometheus
      - name: cloudfoundry_dashboards
        release: prometheus

      - name: grafana
        release: prometheus
        properties:
          grafana:
            server:
              http_port: 3001 # allow nginx to serve all traffic
            security:
              admin_password: ((prometheus_password))
            dashboards:
              json:
                enabled: true
            prometheus:
              dashboard_files:
                - /var/vcap/packages/prometheus_dashboards/*.json
                - /var/vcap/packages/bosh_dashboards/*.json
                - /var/vcap/packages/cloudfoundry_dashboards/*.json

      - name: nginx
        release: prometheus
        properties:
          nginx:
            prometheus:
              auth_username: admin
              auth_password: ((prometheus_password))

      - name: route_registrar
        release: routing
        properties:
          route_registrar:
            routes:
            - name: prometheus
              port: 9090
              registration_interval: 20s
              uris:
              - prometheus.((system_domain))
            - name: grafana
              port: 3000
              registration_interval: 20s
              uris:
              - grafana.((system_domain))

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/prometheus?
  value:
    access-token-validity: 1209600
    authorized-grant-types: authorization_code,client_credentials,refresh_token
    override: true
    scope: openid,oauth.approvals,doppler.firehose
    authorities: oauth.login,doppler.firehose,cloud_controller.admin_read_only
    secret: ((prometheus_uaa_client_secret))
    redirect-uri: /login

- type: replace
  path: /variables/-
  value:
    name: prometheus_password
    type: password

- type: replace
  path: /variables/-
  value:
    name: prometheus_uaa_client_secret
    type: password

- type: replace
  path: /releases/-
  value:
    name: prometheus
    url: https://bosh.io/d/github.com/cloudfoundry-community/prometheus-boshrelease?v=15.1.0
    version: 15.1.0
    sha1: 69125e5be2ba2afd4f3f8c179dee31d53285cb06
