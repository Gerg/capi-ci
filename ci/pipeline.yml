groups:
- name: capi-release
  jobs:
  - cc-unit-tests
  - bridge-unit-tests
  - create-capi-release
  - deploy-and-test-xena
  - bump-cf-release
  - migration-backwards-compatibility-test
  - ship-it
  - bump-capi-release
- name: great-migration
  jobs:
  - cc-unit-tests-with-migrations
  - app-availability-during-migration
- name: dependencies-docs
  jobs:
  - check-cc-dependencies
  - rc-docs
  - update-checkman
  - deliver-stories
- name: xena-deployments
  jobs:
  - deploy-xena-datadog-firehose-nozzle
- name: bosh
  jobs:
  - wait-for-sunday
  - clean-all-the-boshes
  - freshen-wasabi
  - freshen-xena
  - configure-buffy-networking
- name: crash-override
  jobs:
  - MANUALLY-bump-cf-release
- name: version-reset
  jobs:
  - reset-version

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:

# schedules
- name: weekly-sunday
  type: time
  source:
    start: 23:00 -0700
    stop: 23:30 -0700
    days: [Sunday]

- name: daily
  type: time
  source:
    start: 23:00 -0700
    stop: 23:30 -0700
    interval: 24h

- name: bump-hourly
  type: time
  source:
    interval: 1h

- name: deliver-capi-stories
  type: tracker
  source:
    token: {{deliver_capi_tracker_token}}
    project_id: '966314'
    tracker_url: https://www.pivotaltracker.com

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: bosh
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh

- name: bosh-aws-cpi
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bosh-aws-cpi-release

- name: bosh-lite
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-lite.git

- name: bosh-lite-cf-deployment
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden
    ignore_ssl: true

- name: bosh-lite-diego-deployment
  type: bosh-deployment
  source:
    username: admin
    password: admin
    deployment: cf-warden-diego
    ignore_ssl: true

- name: bosh-lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: capi-checkman
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-checkman.git

- name: capi-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/capi-ci.git

- name: capi-ci-private
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: capi-release
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-ci-passed
  type: git
  source:
    branch: ci-passed
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-tarball
  type: s3
  source:
    bucket: cf-capi-releases
    regexp: capi-(.*).tgz
    access_key_id: {{wasabi_s3_access_key}}
    secret_access_key: {{wasabi_s3_secret_key}}

- name: capi-release-version
  type: semver
  source:
    access_key_id: {{wasabi_semver_access_key}}
    secret_access_key: {{wasabi_semver_secret_key}}
    initial_version: 0.0.0
    bucket: capi-release-versions
    key: current-capi-release-version
    region_name: us-east-1

- name: cc-uploader
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cc-uploader.git

- name: cf-release-develop
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release

- name: cf-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-release.git

- name: cf-release-tarball
  type: s3
  source:
    bucket: cf-runtime-releases
    regexp: cf-(\d+)-.*.tgz
    access_key_id: {{wasabi_s3_access_key}}
    secret_access_key: {{wasabi_s3_secret_key}}

- name: cf-wasabi-deployment
  type: bosh-deployment
  source:
    target: 52.0.73.109:25555
    username: {{wasabi_bosh_user}}
    password: {{wasabi_bosh_password}}
    deployment: cf-wasabi
    ignore_ssl: true

- name: cflinuxfs2-rootfs-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release

- name: cloud_controller_ng
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git

- name: cloud_controller_ng-migrate
  type: git
  source:
    branch: migrate
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git

- name: cloud_controller_ng-migrate-migrations
  type: git
  source:
    branch: migrate
    uri: https://github.com/cloudfoundry/cloud_controller_ng.git
    paths: ['db']

- name: cloud_controller_ng-master-migrations
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cloud_controller_ng.git
    paths: ['db']

- name: concourse-config
  type: git
  source:
    paths:
    - wasabi
    ignore_paths:
    - wasabi/deployments/pipeline.yml
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: datadog-firehose-nozzle-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/datadog-firehose-nozzle-release.git

- name: datadog-firehose-nozzle-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/datadog-firehose-nozzle-release

- name: diego-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/diego-ci

- name: diego-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/diego-release.git

- name: diego-release-tarball
  type: s3
  source:
    bucket: diego-final-releases
    regexp: diego-(.*).tgz
    access_key_id: {{diego_s3_access_key}}
    secret_access_key: {{diego_s3_secret_key}}

- name: etcd-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release

- name: garden-linux-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-linux-release

- name: nsync
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/nsync.git

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack_failure_hook_url}}

- name: slack-notice
  type: slack-notification
  source:
    url: {{slack_capi_hook_url}}

- name: stager
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/stager.git

- name: tps
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/tps.git

- name: xena-acceptance-tests-logs
  type: s3
  source:
    private: true
    bucket: xena-acceptance-tests-logs
    regexp: acceptance_tests.(0)..*.tgz
    access_key_id: {{xena_s3_access_key}}
    secret_access_key: {{xena_s3_secret_key}}

- name: xena-datadog-firehose-nozzle-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: datadog-firehose-nozzle
    ignore_ssl: true

- name: xena-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena
    ignore_ssl: true

- name: xena-diego-cats-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-diego-cats
    ignore_ssl: true

- name: xena-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-diego
    ignore_ssl: true

jobs:

- name: cc-unit-tests-with-migrations
  plan:
  - aggregate:
    - get: cloud_controller_ng
      resource: cloud_controller_ng-migrate
      trigger: true
    - get: capi-ci
  - aggregate:
    - task: run-cc-unit-tests-mysql
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: mysql
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests-with-migrations] OH NO! Failed when running with mysql'
          icon_emoji: {{slack_failure_emoji}}
    - task: run-cc-unit-tests-postgres
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: postgres
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests-with-migrations] OH NO! Failed when running with postgres'
          icon_emoji: {{slack_failure_emoji}}

- name: app-availability-during-migration
  plan:
  - aggregate:
    - get: bosh-lite
    - get: bosh-lite-stemcell
    - get: capi-ci
    - get: capi-ci-private
    - get: capi-release-tarball
      passed: [create-capi-release]
    - get: cf-release
      resource: cf-release-develop
    - get: cloud_controller_ng
      resource: cloud_controller_ng-migrate-migrations
    - get: cf-release-tarball
    - get: cflinuxfs2-rootfs-tarball
    - get: diego-release
    - get: diego-release-tarball
    - get: etcd-release-tarball
    - get: garden-linux-release-tarball
#  - task: ensure-bosh-lite-terminated
#    file: capi-ci/ci/scripts/deprovision_bosh_lite.yml
#    params:
#      BOSH_LITE_NAME: buffy-bosh-lite
#      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
#      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
#      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
#  - task: ensure-cloudformation-terminated
#    file: capi-ci/ci/scripts/teardown_cloudformation_stack.yml
#    params:
#      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
#      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
#      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
#      STACK_NAME: buffy-stack
  - task: create-cloudformation
    file: capi-ci/ci/scripts/create_cloudformation_stack.yml
    params:
      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      STACK_NAME: buffy-stack
      CLOUDFORMATION_PATH: capi-ci/buffy/cloudformation.json
  - task: provision-bosh-lite
    file: capi-ci/ci/scripts/provision_bosh_lite.yml
    params:
      BOSH_LITE_INSTANCE_TYPE: c3.4xlarge
      BOSH_LITE_NAME: buffy-bosh-lite
      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
      AWS_SECURITY_GROUP_TAG: {{buffy_security_group_tag}}
      AWS_SUBNET_NAME: {{buffy_subnet_name}}
      BOSH_LITE_KEYPAIR: {{buffy_keypair_name}}
      SSH_KEY: {{buffy_private_key}}
      APP_DOMAIN: buffy-apps.capi.cf-app.com
      SYSTEM_DOMAIN: buffy.capi.cf-app.com
  - task: generate-bosh-lite-cf-manifest
    file: capi-ci/ci/scripts/generate-bosh-lite-cf-manifest.yml
    params:
      ENVIRONMENT_STUB: capi-ci/buffy/stubs/cf/cf-stub.yml
      STUBS_PATH: deployments/stub.yml
  - put: bosh-lite-cf-deployment
    params:
      target_file: deployments/target
      manifest: generated-manifests/cf-deployment.yml
      stemcells:
        - bosh-lite-stemcell/*.tgz
      releases:
        - cf-release-tarball/*.tgz
        - capi-release-tarball/*.tgz
  - put: bosh-lite-diego-deployment
    params:
      target_file: deployments/target
      manifest: generated-manifests/diego-deployment.yml
      stemcells:
        - bosh-lite-stemcell/*.tgz
      releases:
        - capi-release-tarball/*.tgz
        - diego-release-tarball/*.tgz
        - garden-linux-release-tarball/*.tgz
        - etcd-release-tarball/*.tgz
        - cflinuxfs2-rootfs-tarball/*.tgz
  - task: app-availability-test
    file: capi-ci/ci/scripts/app_availability_test.yml
    params:
      APP_DOMAIN: buffy-apps.capi.cf-app.com
      API_DOMAIN: api.buffy.capi.cf-app.com
      CLOUD_CONTROLLER_BRANCH: migrate
      TUNNEL_HOST: bosh.buffy.capi.cf-app.com
      DB_HOST: 10.244.0.30
      ENVIRONMENT: buffy
      CONNECTION_STRING: {{buffy_cc_db_connection_string}}
#  - task: deprovision-bosh-lite
#    file: capi-ci/ci/scripts/deprovision_bosh_lite.yml
#    params:
#      BOSH_LITE_NAME: buffy-bosh-lite
#      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
#      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
#      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
#  - task: terminate-cloudformation
#    file: capi-ci/ci/scripts/teardown_cloudformation_stack.yml
#    params:
#      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
#      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
#      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
#      STACK_NAME: buffy-stack

- name: check-cc-dependencies
  serial: true
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: concourse-config
    - get: capi-ci
  - task: check-dependencies
    file: capi-ci/ci/scripts/cloud_controller_ng_dependencies.yml
    params:
      GEMNASIUM_API_KEY: {{gemnasium_api_key}}

- name: configure-buffy-networking
  plan:
  - aggregate:
    - get: capi-ci
  - task: delete-cloudformation
    file: capi-ci/ci/scripts/teardown_cloudformation_stack.yml
    params:
      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      STACK_NAME: buffy-hosted-zones
  - task: create-cloudformation
    file: capi-ci/ci/scripts/create_cloudformation_stack.yml
    params:
      AWS_DEFAULT_REGION: {{buffy_aws_default_region}}
      AWS_ACCESS_KEY_ID: {{buffy_access_key}}
      AWS_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      STACK_NAME: buffy-hosted-zones
      CLOUDFORMATION_PATH: capi-ci/buffy/cloudformation-hosted-zones.json
  - task: delegate-buffy-dns
    file: capi-ci/ci/scripts/configure_route53_zone_delegation.yml
    params:
      DELEGATION_ZONE: capi.cf-app.com.
      DELEGATION_ACCESS_KEY_ID: {{wasabi_route53_access_key}}
      DELEGATION_SECRET_ACCESS_KEY: {{wasabi_route53_secret_key}}
      ZONE_ACCESS_KEY_ID: {{buffy_access_key}}
      ZONE_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      ZONE: "buffy.capi.cf-app.com"
  - task: delegate-buffy-apps-dns
    file: capi-ci/ci/scripts/configure_route53_zone_delegation.yml
    params:
      DELEGATION_ZONE: capi.cf-app.com.
      DELEGATION_ACCESS_KEY_ID: {{wasabi_route53_access_key}}
      DELEGATION_SECRET_ACCESS_KEY: {{wasabi_route53_secret_key}}
      ZONE_ACCESS_KEY_ID: {{buffy_access_key}}
      ZONE_SECRET_ACCESS_KEY: {{buffy_secret_key}}
      ZONE: "buffy-apps.capi.cf-app.com"

- name: cc-unit-tests
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: capi-ci
  - aggregate:
    - task: run-cc-unit-tests-mysql
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: mysql
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with mysql'
          icon_emoji: {{slack_failure_emoji}}
    - task: run-cc-unit-tests-postgres
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: postgres
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with postgres'
          icon_emoji: {{slack_failure_emoji}}

- name: bump-capi-release
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
    - get: cloud_controller_ng-master-migrations
      passed: [migration-backwards-compatibility-test]
      trigger: true
    - get: cloud_controller_ng
      passed: [cc-unit-tests]
      trigger: true
    - get: diego-release
      passed: [bridge-unit-tests]
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
    - get: cc-uploader
      passed: [bridge-unit-tests]
      trigger: true
    - get: nsync
      passed: [bridge-unit-tests]
      trigger: true
    - get: stager
      passed: [bridge-unit-tests]
      trigger: true
    - get: tps
      passed: [bridge-unit-tests]
      trigger: true
  - task: bump-capi-release
    file: capi-ci/ci/scripts/bump_capi_release_conditionally.yml
  - put: capi-release
    params:
      repository: bumped/capi-release
      rebase: true

- name: bridge-unit-tests
  plan:
  - aggregate:
    - get: capi-release
    - get: cc-uploader
      trigger: true
    - get: nsync
      trigger: true
    - get: stager
      trigger: true
    - get: tps
      trigger: true
    - get: capi-ci
    - get: diego-release
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
  - task: run-bridge-unit-tests
    file: capi-ci/ci/scripts/run_bridge_unit_tests.yml

- name: create-capi-release
  serial: true
  plan:
  - aggregate:
    - get: capi-release
      trigger: true
    - get: capi-ci
    - get: version
      resource: capi-release-version
      params:
        pre: rc
  - put: capi-release-version
    params:
      file: version/version
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to update version'
        icon_emoji: {{slack_failure_emoji}}
  - task: create-release-tarball
    file: capi-ci/ci/scripts/create_capi_release.yml
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to create tarball'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-release-tarball
    params:
      file: created-capi-release/capi-*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to upload tarball'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-and-test-xena
  serial: true
  serial_groups: [deploy-xena-cf]
  plan:
  - aggregate:
    - get: cf-release-tarball
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
    - get: capi-release
      passed: [create-capi-release]
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
    - get: xena-diego-deployment
      trigger: true
    - get: diego-ci
    - get: diego-release
      params:
        submodules: none
    - get: garden-linux-release-tarball
    - get: etcd-release-tarball
    - get: diego-release-tarball
      trigger: true
    - get: cflinuxfs2-rootfs-tarball
  - task: manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: xena
  - task: generate-deployment-manifests
    file: capi-ci/ci/scripts/create_diego_release_manifest.yml
    params:
      BOSH_TARGET: bosh.xena.cf-app.com
      BOSH_USER: {{xena_bosh_user}}
      BOSH_PASSWORD: {{xena_bosh_password}}
      DEPLOYMENTS_DIR: capi-ci-private
      ENVIRONMENT_NAME: xena
  - put: xena-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-release-tarball/*.tgz
        - capi-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed deploying cf-release to xena'
        icon_emoji: {{slack_failure_emoji}}
  - put: xena-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases:
        - diego-release-tarball/*.tgz
        - garden-linux-release-tarball/*.tgz
        - etcd-release-tarball/*.tgz
        - cflinuxfs2-rootfs-tarball/*.tgz
      stemcells: [aws-stemcell/*.tgz]
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed deploying diego to xena'
        icon_emoji: {{slack_failure_emoji}}
  - task: acceptance-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-xena
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
    ensure:
      put: xena-acceptance-tests-logs
      params:
        file: bosh-logs/acceptance_tests*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed on acceptance-tests'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-release-ci-passed
    params:
      repository: capi-release

- name: ship-it
  plan:
  - aggregate:
    - get: capi-release
      passed: [deploy-and-test-xena]
    - get: version
      resource: capi-release-version
      bump: final
  - put: capi-release-version
    params:
      file: version/version
  - put: capi-release
    params:
      repository: capi-release
      only_tag: true
      tag: version/version
      tag_prefix: v
  - put: capi-release-version
    params:
      bump: minor
  - task: block
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Way to go, Nick!"]

- name: bump-cf-release
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      trigger: true
      passed: [ship-it]
    - get: cf-release
      resource: cf-release-develop
      params:
        submodules:
        - src/capi-release
  - task: check-can-i-bump
    file: capi-ci/ci/scripts/check_can_i_bump.yml
  - task: bump-cf-release
    file: capi-ci/ci/scripts/bump_cf_release.yml
  - put: cf-release-develop
    params:
      repository: bumped/cf-release
      rebase: true

- name: MANUALLY-bump-cf-release
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      passed: [deploy-and-test-xena]
    - get: cf-release
      resource: cf-release-develop
      params:
        submodules:
        - src/capi-release
  - task: bump-cf-release
    file: capi-ci/ci/scripts/bump_cf_release.yml
  - put: cf-release-develop
    params:
      repository: bumped/cf-release
      rebase: true

- name: migration-backwards-compatibility-test
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: cf-release-final
      params:
        tarball: true
    - get: cf-release
      resource: cf-release-master
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cloud_controller_ng
      resource: cloud_controller_ng-master-migrations
      trigger: true
  - task: manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: wasabi
  - task: delete-wasabi-deployment
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'delete deployment cf-wasabi'
  - put: cf-wasabi-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ cf-release-final/release.tgz]
  - task: smoke-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand smoke_tests --keep-alive'
  - task: apply-migrations
    privileged: true
    file: capi-ci/ci/scripts/apply_cc_migrations.yml
    params:
      CONNECTION_STRING: {{cc_db_connection_string}}
      ENVIRONMENT: wasabi
      DB_HOST: 10.0.32.30
      TUNNEL_HOST: 52.0.73.109
  - task: acceptance-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
    on_success:
      task: cleanup-wasabi-deployment
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_command.yml
      input_mapping: {manifest: generated-manifest}
      params:
        <<: *bosh-target-wasabi
        DEPLOYMENT_YML: manifest/deployment.yml
        COMMAND: 'delete deployment cf-wasabi'

- name: clean-all-the-boshes
  plan:
  - aggregate:
    - get: capi-ci
    - get: daily
      trigger: true
  - aggregate:
    - task: cleanup-wasabi
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-wasabi
        BOSH_DIRECTOR: https://bosh.wasabi.cf-app.com:25555
        BOSH_USER: {{wasabi_bosh_user}}
        BOSH_PASSWORD: {{wasabi_bosh_password}}
    - task: cleanup-xena
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-xena
        BOSH_DIRECTOR: https://bosh.xena.cf-app.com:25555
        BOSH_USER: {{xena_bosh_user}}
        BOSH_PASSWORD: {{xena_bosh_password}}
      on_failure:
        put: slack-alert
        params:
          text: '[clean-all-the-boshes] OH NO! Failed to clean old boshes https://capi.ci.cf-app.com/?groups=bosh'
          icon_emoji: {{slack_failure_emoji}}

- name: deploy-xena-datadog-firehose-nozzle
  serial_groups: [deploy-xena-datadog]
  plan:
  - aggregate:
    - get: datadog-firehose-nozzle-release-final
      params:
        tarball: true
      trigger: true
    - get: datadog-firehose-nozzle-release
    - get: aws-stemcell
    - get: capi-ci-private
    - get: capi-ci
  - task: manifest
    file: capi-ci/ci/scripts/create_datadog_firehose_nozzle_manifest.yml
    params:
      ENVIRONMENT: xena
  - put: xena-datadog-firehose-nozzle-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ datadog-firehose-nozzle-release-final/release.tgz]

- name: rc-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
      params:
        submodules:
          - src/cloud_controller_ng
  - task: push-rc-docs
    file: capi-ci/ci/scripts/push_rc_docs.yml
    params: &docs-aws-account
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: {{docs_s3_access_key}}
      AWS_SECRET_ACCESS_KEY: {{docs_s3_secret_key}}
      GITHUB_PUSH_KEY: {{private_key}}
    on_failure:
      put: slack-alert
      params:
        text: '[rc-docs] OH NO! Failed to update documentation https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
        icon_emoji: {{slack_failure_emoji}}

- name: update-checkman
  plan:
    - aggregate:
      - get: capi-ci
        trigger: true
      - get: capi-checkman
    - task: update-checkman
      file: capi-ci/ci/scripts/update_checkman.yml
      on_success:
        put: slack-alert
        params:
          text: '[update-checkman] Checkman configuration successfully updated'
          icon_emoji: ':capi:'
      on_failure:
        put: slack-alert
        params:
          text: '[update-checkman] OH NO! There was a problem updating configuration! https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
          icon_emoji: {{slack_failure_emoji}}
    - put: capi-checkman
      params:
        repository: updated-capi-checkman
        rebase: true

- name: wait-for-sunday
  plan:
  - aggregate:
    - get: weekly-sunday
      trigger: true
    - get: bosh
    - get: bosh-aws-cpi
    - get: aws-stemcell

- name: freshen-wasabi
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: bosh
      passed: [wait-for-sunday]
      trigger: true
    - get: bosh-aws-cpi
      passed: [wait-for-sunday]
      trigger: true
    - get: aws-stemcell
      passed: [wait-for-sunday]
      trigger: true
  - task: freshen-wasabi
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BOSH_INIT_CONFIG_DIR: capi-ci-private/wasabi/deployments/bosh
      BOSH_ENVIRONMENT_NAME: wasabi
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-wasabi] OH NO! Failed to freshen wasabi https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: freshened-config/capi-ci-private
      rebase: true

- name: freshen-xena
  serial: true
  serial_groups: [deploy-xena-cf, deploy-xena-diego, deploy-xena-datadog]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: bosh
      passed: [wait-for-sunday]
      trigger: true
    - get: bosh-aws-cpi
      passed: [wait-for-sunday]
      trigger: true
    - get: aws-stemcell
      passed: [wait-for-sunday]
      trigger: true
  - task: freshen-xena
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BOSH_INIT_CONFIG_DIR: capi-ci-private/xena/deployments/bosh
      BOSH_ENVIRONMENT_NAME: xena
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-xena] OH NO! Failed to freshen xena https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: freshened-config/capi-ci-private
      rebase: true

- name: deliver-stories
  serial: true
  plan:
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
    - put: deliver-capi-stories
      params:
        repos:
        - capi-release/src/cloud_controller_ng

- name: reset-version
  serial: true
  plan:
  - get: capi-ci
  - get: version
    resource: capi-release-version
  - task: set-version
    file: capi-ci/ci/scripts/reset_version.yml
  - put: capi-release-version
    params:
      file: updated-version/number
