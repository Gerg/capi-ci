---
resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: pcf-pool
  type: docker-image
  source:
      repository: cftoolsmiths/toolsmiths-envs-resource

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: capi-ci
  type: git
  icon: github-box
  source:
    branch: update-backup-metadata-pipeline
    private_key: ((private_key))
    uri: git@github.com:cloudfoundry/capi-ci

- name: capi-ci-private
  type: git
  source:
    branch: master
    private_key: ((private_key))
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: src
  type: git
  source:
    paths: [src/backup-metadata]
    ignore_paths: [src/backup-metadata/config]
    private_key: ((private_key))
    uri: git@github.com:cloudfoundry/capi-k8s-release.git

- name: capi-k8s-release-except-images
  type: git
  check_every: 2m
  source:
    branch: master
    private_key: ((private_key))
    uri: git@github.com:cloudfoundry/capi-k8s-release.git
    ignore_paths: [values/images.yml]

- name: cloudfoundry-build-base
  type: docker-image
  source:
    repository: cloudfoundry/build
    tag: base

- name: cf-for-k8s
  type: git
  source:
    branch: develop
    private_key: ((private_key))
    uri: git@github.com:cloudfoundry/cf-for-k8s.git

- name: samus-backup-test-cluster-tf-state
  type: terraform
  source:
    env_name: samus-backup-test
    backend_type: gcs
    backend_config:
      bucket: samus-backup-test-cluster-tf-state
      credentials: ((samus_gcp_json_key))
    delete_on_failure: false

  # Docker images
- name: capi-docker-image
  type: registry-image
  source:
    repository: cloudfoundry/cloud-controller-ng
    username: ((dockerhub_user))
    password: ((dockerhub_pass))

- name: cf-api-controllers-docker-image
  type: registry-image
  source:
    repository: cloudfoundry/cf-api-controllers
    username: ((dockerhub_user))
    password: ((dockerhub_pass))

- name: registry-buddy-docker-image
  type: registry-image
  source:
    repository: cloudfoundry/cf-api-package-registry-buddy
    username: ((dockerhub_user))
    password: ((dockerhub_pass))

- name: nginx-docker-image
  type: registry-image
  source:
    repository: cloudfoundry/capi-nginx
    username: ((dockerhub_user))
    password: ((dockerhub_pass))

- name: backup-metadata-docker-image
  type: registry-image
  source:
    repository: cloudfoundry/cf-api-backup-metadata-generator
    username: ((dockerhub_user))
    password: ((dockerhub_pass))

jobs:
- name: provision-samus-backup-test-cluster
  plan:
    - get: cf-for-k8s
    - put: samus-backup-test-cluster-tf-state
      params:
        terraform_source: cf-for-k8s/deploy/gke/terraform
        vars:
          project: cff-capi-samus
          region: us-west1
          zone: us-west1-a
          service_account_key: ((samus_gcp_json_key))
          env_name: samus-backup-test
          env_dns_domain: samus-backup-test.capi.land
          dns_zone_name: samus-backup-test-zone

- name: delete-samus-backup-test-cluster
  plan:
    - get: cf-for-k8s
    - put: samus-backup-test-cluster-tf-state
      params:
        action: destroy
        terraform_source: cf-for-k8s/deploy/gke/terraform
        vars:
          project: cff-capi-samus
          region: us-west1
          zone: us-west1-a
          service_account_key: ((samus_gcp_json_key))
          env_name: samus-backup-test
          env_dns_domain: samus-backup-test.capi.land
          dns_zone_name: samus-backup-test-zone
      get_params:
        action: destroy

- name: backup-metadata-unit-tests
  plan:
  - in_parallel:
    - get: src
      trigger: true
    - get: capi-ci
  - task: run-backup-metadata-unit-tests
    file: capi-ci/ci/backup-metadata/run-backup-metadata-unit-tests.yml
    input_mapping:
      backup-metadata: src

- name: build-backup-metadata-image
  plan:
  - in_parallel:
    - get: src
      passed: [backup-metadata-unit-tests]
      trigger: true
      passed: [backup-metadata-unit-tests]
    - get: capi-ci
    - get: cloudfoundry-build-base
      trigger: true
  - task: build-with-pack
    privileged: true
    file: capi-ci/ci/oci/build-with-pack.yml
    params:
      CONTEXT_PATH: src/backup-metadata
      ADDITIONAL_ARGS: "--buildpack gcr.io/paketo-buildpacks/go --buildpack gcr.io/paketo-buildpacks/procfile --default-process wait"
    input_mapping:
      source-repository: src
  - task: run-deplab
    privileged: true
    file: capi-ci/ci/docker/run-deplab.yml
    input_mapping:
      source-repository: src
  - put: backup-metadata-docker-image
    params:
      image: labeled-image/image.tar

- name: deploy-and-test
  serial: true
  serial_groups: [ samus-backup-test ]
  plan:
  - in_parallel:
    - get: capi-k8s-release-except-images
      trigger: true
    - get: capi-ci
    - get: capi-ci-private
    - get: cf-for-k8s
    - get: backup-metadata-docker-image
      trigger: true
      passed: [build-backup-metadata-image]
    - get: capi-docker-image
    - get: cf-api-controllers-docker-image
    - get: registry-buddy-docker-image
    - get: nginx-docker-image
    - get: samus-backup-test-cluster-tf-state
      passed: [ provision-samus-backup-test-cluster ]
  - task: delete-deployment
    file: capi-ci/ci/k8s/delete-cf-for-k8s.yml
    params:
      CAPI_ENVIRONMENT_NAME: samus-backup-test
      GOOGLE_SERVICE_ACCOUNT_EMAIL: concourse@cff-capi-samus.iam.gserviceaccount.com
      GOOGLE_PROJECT_NAME: cff-capi-samus
      GOOGLE_KEY_FILE_PATH: capi-ci-private/samus/concourse-service-account.json
  - task: deploy
    file: capi-ci/ci/k8s/deploy-cf-for-k8s.yml
    input_mapping:
      capi-k8s-release: capi-k8s-release-except-images
      cluster-tf-state: samus-backup-test-cluster-tf-state
    params:
      CAPI_ENVIRONMENT_NAME: samus-backup-test
      GOOGLE_SERVICE_ACCOUNT_EMAIL: concourse@cff-capi-samus.iam.gserviceaccount.com
      GOOGLE_PROJECT_NAME: cff-capi-samus
      CLUSTER_NAME: samus-backup-test
      GCP_ZONE: us-west1-a
      GOOGLE_KEY_FILE_PATH: capi-ci-private/samus/concourse-service-account.json
    ensure:
      do:
      - task: commit-env-metadata
        file: capi-ci/ci/k8s/commit-env-metadata.yml
        params:
          REPO_SUBDIRECTORY: samus-backup-test
        input_mapping:
          private-env-repo: capi-ci-private
      - put: capi-ci-private
        params:
          repository: updated-private-env-repo
          rebase: true
  - task: install-velero
    file: capi-ci/ci/backup-metadata/install-velero.yml
    params:
      GKE_SERVICE_ACCOUNT_KEY: ((backup_metadata_gke_service_account_key))
      VELERO_SERVICE_ACCOUNT_KEY: ((backup_metadata_velero_service_account_key))
      VELERO_TEST_BUCKET: samus-backup-test-cluster-velero-bucket
      CLUSTER_NAME: samus-backup-test
      GCP_ZONE: us-west1-a
  - task: e2e-test
    file: capi-ci/ci/backup-metadata/e2e-test.yml
    input_mapping:
      capi-k8s-release: capi-k8s-release-except-images
    params:
      GKE_SERVICE_ACCOUNT_KEY: ((backup_metadata_gke_service_account_key))
      GOOGLE_PROJECT_NAME: cff-capi-samus
      CLUSTER_NAME: samus-backup-test
      GCP_ZONE: us-west1-a
