#!/usr/bin/env bash

set -xu

function setup_aws_env() {
  export AWS_ACCESS_KEY_ID=$1
  export AWS_SECRET_ACCESS_KEY=$2
}

function delegate_zone() {
  declare zone=$1 delegation_zone_id=$2 nameservers=$3 servers="" json

  for server in $nameservers; do
    servers="${servers}{\"Value\":\"${server}\"},"
  done

  json=$(cat <<EOF
{
  "Comment": "Update name server records",
  "Changes": [
    {
      "Action": "UPSERT",
      "ResourceRecordSet": {
        "Name":"${zone}",
        "Type":"NS",
        "TTL": 60,
        "ResourceRecords": [
          ${servers%,}
        ]
      }
    }
  ]
}
EOF)

  aws route53 change-resource-record-sets \
    --hosted-zone-id "${delegation_zone_id}" \
    --change-batch "${json}"
}

function find_name_servers() {
  declare zone_id=$1

  aws route53 get-hosted-zone --id "${zone_id}" | jq -r '.DelegationSet.NameServers[]'
}

function hosted_zone_id_from_name() {
  declare zone=$1

  aws route53 list-hosted-zones-by-name --dns-name "${zone}" | jq -r '.HostedZones[0].Id' | cut -d'/' -f3
}

function main() {
  set +x
  setup_aws_env "${ZONE_ACCESS_KEY_ID}" "${ZONE_SECRET_ACCESS_KEY}"
  set -x

  zone_id="$(hosted_zone_id_from_name "${ZONE}")"
  nameservers=$(find_name_servers "${zone_id}")

  echo $nameservers

  set +x
  setup_aws_env "${DELEGATION_ACCESS_KEY_ID}" "${DELEGATION_SECRET_ACCESS_KEY}"
  set -x

  delegation_zone_id="$(hosted_zone_id_from_name "${DELEGATION_ZONE}")"
  delegate_zone "${ZONE}" "${delegation_zone_id}" "${nameservers}"
}

main
